{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Various techniques for dealing with PDF. Especially where scanned material comes in PDF format and needs to be prepared as source material for scholars. Credits: Cornelis van Lit .","title":"Home"},{"location":"pipeline/instruction/","text":"NISIS autumn school 2019 \u00b6 These are instructions for the NISIS autumn school 2019 , workshop day Wednesday 2019-10-30, Utrecht. It shows how a pipeline, suggested by Cornelis van Lit , from scanned book to OCR-ed book can be carried out with open source tools. Boost your knowledge \u00b6 Python programming for the humanities Prerequisites \u00b6 macos Xcode is required, but only the command line tools. macos 1 xcode-select --install We need a package manager to download, compile and install software. Such a package manager needs a C-compiler, which we installed as part of the command line tools of Xcode. There are two main options: Homebrew and Macports We choose Macports, since it has all software we need. The install package can be downloaded from Macports Installation . You get a file MacPorts-2.6.2-10.14-Mojave.pkg or something similar. Double click to install. Then start the Terminal application, or restart it. From now on, all software installation takes place on the Terminal. Software \u00b6 GhostScript macos 1 sudo port install ghostscript More info Imagemagick macos 1 sudo port install ImageMagick About Scantailor First we install the command line interface. macos 1 sudo port install scantailor More info . But the fun is with the graphical interface. On the Mac, that is hard to get, we have to build from source. We have instructions to get that, but before that you may have to do this first macos 1 brew cask install xquartz instructions that work . Tesseract We also need language data for English. macos 1 2 sudo port install tesseract sudo port install tesseract-eng More info Poppler macos 1 sudo port install poppler More info Local organization \u00b6 Working directory Create a working directory somewhere on your system, it does not matter where. For the sake of this guide, I assume local/pdfprocessing . We can do this from the terminal. macos 1 2 3 4 5 cd mkdir local cd local mkdir pdfprocessing cd pdfprocessing Data \u00b6 You can download the scan of a book as test data: testBook.pdf . Put it in your working directory, local/pdfprocessing . Pipeline \u00b6 Convert to JPG, per double page We need to create the directory where the images will land: macos 1 mkdir images Now we can use image magick to wade through the pages of the pdf: macos 1 magick convert -density 200 testBook.pdf -quality 100 images/image-%02d.jpg After completion you have 117 JPG images in your images irectory, one for each double page. Split the double pages into single pages We'll use the command line to work with Scantailor. First we need to create a directory where Scantailor can dump its output, we give it the name scout . macos 1 mkdir scout Then we call Scantailor with standard options: macos 1 scantailor-cli images scout Now scout contains 234 TIFF images, one for each single page. Recompose the pages into a new PDF macos 1 magick convert \"scout/*.tif\" -quality 100 out.pdf Now you have an out.pdf file of 14.9 MB. OCR the TIFF images We use Tesseract to perform Optical Character Recognition. First we move to the directory with TIFF images, then we create OCR-ed PDFs next to them. macos 1 cd scout Try it out first The following command translates file names from image-xxx to page-xxx . Depending on your machine, the exact code might be different. If this goes wrong, chances are that tesseract writes the output for each page to exactly the same location, so after a long wait we only have the results for the last page. It is better to try this out on a small set. Use your file browser to make a directory scout2 with only a few TIFF files, and then instead go to scout2 macos 1 cd ../scout2 Then run the command below, and verify of you get a file page-xxx next to each image-xxx . If not, check the bash manual macos 1 man bash and search for /Parameter Expansion (the / is the search command). macos 1 for f in *.tif ; do tesseract $f page ${ f : 5 } PDF ; done Now you have a lot of new page-xxx.tif.pdf files in scout . Combine the OCR-ed PDFs into a single PDF We use Poppler for the recombination step (the command pdfunite below comes from the Poppler suite). We go back to the top of our working directory, one level up. macos 1 2 cd .. pdfunite scout/*.pdf finalBook.pdf I got an error: a file appears to be empty. I moved it to a new directory damaged : macos 1 2 3 mkdir damaged mv scout/page-80_1L.tif.pdf damaged pdfunite scout/*.pdf finalBook.pdf Now you have a finalBook.pdf file of 6.9 MB","title":"Pipeline"},{"location":"pipeline/instruction/#nisis-autumn-school-2019","text":"These are instructions for the NISIS autumn school 2019 , workshop day Wednesday 2019-10-30, Utrecht. It shows how a pipeline, suggested by Cornelis van Lit , from scanned book to OCR-ed book can be carried out with open source tools.","title":"NISIS autumn school 2019"},{"location":"pipeline/instruction/#boost-your-knowledge","text":"Python programming for the humanities","title":"Boost your knowledge"},{"location":"pipeline/instruction/#prerequisites","text":"macos Xcode is required, but only the command line tools. macos 1 xcode-select --install We need a package manager to download, compile and install software. Such a package manager needs a C-compiler, which we installed as part of the command line tools of Xcode. There are two main options: Homebrew and Macports We choose Macports, since it has all software we need. The install package can be downloaded from Macports Installation . You get a file MacPorts-2.6.2-10.14-Mojave.pkg or something similar. Double click to install. Then start the Terminal application, or restart it. From now on, all software installation takes place on the Terminal.","title":"Prerequisites"},{"location":"pipeline/instruction/#software","text":"GhostScript macos 1 sudo port install ghostscript More info Imagemagick macos 1 sudo port install ImageMagick About Scantailor First we install the command line interface. macos 1 sudo port install scantailor More info . But the fun is with the graphical interface. On the Mac, that is hard to get, we have to build from source. We have instructions to get that, but before that you may have to do this first macos 1 brew cask install xquartz instructions that work . Tesseract We also need language data for English. macos 1 2 sudo port install tesseract sudo port install tesseract-eng More info Poppler macos 1 sudo port install poppler More info","title":"Software"},{"location":"pipeline/instruction/#local-organization","text":"Working directory Create a working directory somewhere on your system, it does not matter where. For the sake of this guide, I assume local/pdfprocessing . We can do this from the terminal. macos 1 2 3 4 5 cd mkdir local cd local mkdir pdfprocessing cd pdfprocessing","title":"Local organization"},{"location":"pipeline/instruction/#data","text":"You can download the scan of a book as test data: testBook.pdf . Put it in your working directory, local/pdfprocessing .","title":"Data"},{"location":"pipeline/instruction/#pipeline","text":"Convert to JPG, per double page We need to create the directory where the images will land: macos 1 mkdir images Now we can use image magick to wade through the pages of the pdf: macos 1 magick convert -density 200 testBook.pdf -quality 100 images/image-%02d.jpg After completion you have 117 JPG images in your images irectory, one for each double page. Split the double pages into single pages We'll use the command line to work with Scantailor. First we need to create a directory where Scantailor can dump its output, we give it the name scout . macos 1 mkdir scout Then we call Scantailor with standard options: macos 1 scantailor-cli images scout Now scout contains 234 TIFF images, one for each single page. Recompose the pages into a new PDF macos 1 magick convert \"scout/*.tif\" -quality 100 out.pdf Now you have an out.pdf file of 14.9 MB. OCR the TIFF images We use Tesseract to perform Optical Character Recognition. First we move to the directory with TIFF images, then we create OCR-ed PDFs next to them. macos 1 cd scout Try it out first The following command translates file names from image-xxx to page-xxx . Depending on your machine, the exact code might be different. If this goes wrong, chances are that tesseract writes the output for each page to exactly the same location, so after a long wait we only have the results for the last page. It is better to try this out on a small set. Use your file browser to make a directory scout2 with only a few TIFF files, and then instead go to scout2 macos 1 cd ../scout2 Then run the command below, and verify of you get a file page-xxx next to each image-xxx . If not, check the bash manual macos 1 man bash and search for /Parameter Expansion (the / is the search command). macos 1 for f in *.tif ; do tesseract $f page ${ f : 5 } PDF ; done Now you have a lot of new page-xxx.tif.pdf files in scout . Combine the OCR-ed PDFs into a single PDF We use Poppler for the recombination step (the command pdfunite below comes from the Poppler suite). We go back to the top of our working directory, one level up. macos 1 2 cd .. pdfunite scout/*.pdf finalBook.pdf I got an error: a file appears to be empty. I moved it to a new directory damaged : macos 1 2 3 mkdir damaged mv scout/page-80_1L.tif.pdf damaged pdfunite scout/*.pdf finalBook.pdf Now you have a finalBook.pdf file of 6.9 MB","title":"Pipeline"}]}